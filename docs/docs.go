// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2020-04-21 18:21:14.1023917 +0800 CST m=+0.034998901

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Xuwenyu",
            "url": "https://www.hrforce.cn",
            "email": "wenyu.xu@hrforce.cn"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/B/AddUser": {
            "post": {
                "description": "根据提交的信息创建用户",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Company"
                ],
                "summary": "创建用户",
                "parameters": [
                    {
                        "description": "需要上传的JSON",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Companys"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "code：0 创建用户成功",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "code：-1 参数错误； code：-2 身份校验失败",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Companys": {
            "type": "object",
            "required": [
                "balance",
                "company_code",
                "company_name",
                "password"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "agent": {
                    "type": "string"
                },
                "agent_phone": {
                    "type": "string"
                },
                "attorney": {
                    "type": "string"
                },
                "authorization_img_uri": {
                    "type": "string"
                },
                "background": {
                    "type": "string"
                },
                "balance": {
                    "type": "integer"
                },
                "company_abbreviations": {
                    "type": "string"
                },
                "company_bussiness": {
                    "type": "string"
                },
                "company_code": {
                    "type": "string"
                },
                "company_name": {
                    "type": "string"
                },
                "company_phonenum": {
                    "type": "string"
                },
                "company_type": {
                    "type": "integer"
                },
                "contact_name": {
                    "type": "string"
                },
                "contact_phonenum": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "employee_count": {
                    "type": "integer"
                },
                "financing": {
                    "type": "integer"
                },
                "have_reward": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "industry": {
                    "type": "integer"
                },
                "invite_code": {
                    "type": "string"
                },
                "invite_reward": {
                    "type": "integer"
                },
                "is_realname": {
                    "type": "integer"
                },
                "last_login_timestamp": {
                    "type": "integer"
                },
                "legalperson": {
                    "type": "string"
                },
                "licence_img_uri": {
                    "type": "string"
                },
                "login_mail": {
                    "type": "string"
                },
                "login_name": {
                    "type": "string"
                },
                "logo_uri": {
                    "type": "string"
                },
                "major_link": {
                    "type": "string"
                },
                "organization_code": {
                    "type": "string"
                },
                "paper_count": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                },
                "register_timestamp": {
                    "type": "integer"
                },
                "smtp_password": {
                    "type": "string"
                },
                "smtp_port": {
                    "type": "string"
                },
                "smtp_server": {
                    "type": "string"
                },
                "smtp_username": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "subscibe_mail": {
                    "type": "integer"
                },
                "tmp_company_name": {
                    "type": "string"
                },
                "use_smtp_default": {
                    "type": "integer"
                },
                "validate_timestamp": {
                    "type": "integer"
                },
                "website": {
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "localhost:1234",
	BasePath:    "/v1",
	Schemes:     []string{"https"},
	Title:       "HRforce后台API",
	Description: "后台管理.",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
